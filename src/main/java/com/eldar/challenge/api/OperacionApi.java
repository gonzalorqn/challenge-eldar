/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.eldar.challenge.api;

import com.eldar.challenge.api.configuration.ApiUtil;
import com.eldar.challenge.dto.OperacionDTO;
import com.eldar.challenge.dto.TasaOperacionDTO;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "operacion", description = "the operacion API")
public interface OperacionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "", nickname = "consultarTasaOperacion", notes = "Calcula la tasa de una operación.", response = TasaOperacionDTO.class, tags={ "Operacion", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = TasaOperacionDTO.class) })
    @RequestMapping(value = "/operacion/{idOperacion}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    default ResponseEntity<TasaOperacionDTO> consultarTasaOperacion(@ApiParam(value = "Id de la operación.",required=true) @PathVariable("idOperacion") String idOperacion) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"marcaTarjeta\" : \"marcaTarjeta\",  \"importe\" : 0.8008282,  \"tasaOperacion\" : \"tasaOperacion\"}");
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    ApiUtil.setExampleResponse(request, "application/xml", "<null>  <tasaOperacion>aeiou</tasaOperacion>  <importe>1.3579</importe>  <marcaTarjeta>aeiou</marcaTarjeta></null>");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "", nickname = "realizarOperacion", notes = "Realiza una operación en el sistema con la tarjeta especificada y guarda la información de dicha operación.", response = OperacionDTO.class, tags={ "Operacion", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = OperacionDTO.class) })
    @RequestMapping(value = "/operacion",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.POST)
    default ResponseEntity<OperacionDTO> realizarOperacion(@NotNull @ApiParam(value = "Id de la tarjeta.", required = true) @Valid @RequestParam(value = "id_tarjeta", required = true) String idTarjeta,@NotNull @ApiParam(value = "Importe de la operación.", required = true) @Valid @RequestParam(value = "importe", required = true) String importe) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"fechaTransaccion\" : \"2000-01-23T04:56:07.000+00:00\",  \"id\" : 0,  \"tarjeta\" : {    \"marca\" : \"marca\",    \"numero\" : \"numero\",    \"fechaVencimiento\" : \"fechaVencimiento\",    \"id\" : 0,    \"cardholder\" : \"cardholder\"  },  \"importe\" : 6.0274563}");
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/xml"))) {
                    ApiUtil.setExampleResponse(request, "application/xml", "<null>  <id>123456789</id>  <importe>1.3579</importe>  <fechaTransaccion>2000-01-23T04:56:07.000Z</fechaTransaccion></null>");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
